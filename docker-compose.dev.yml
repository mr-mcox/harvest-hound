services:
  backend:
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      # Default development settings - use a path that exists and has proper permissions
      - DATABASE_URL=sqlite:////app/data/dev.db
      - BAML_ENV=development
      - PYTHONPATH=/app/packages/backend
      # Secret API keys from host environment
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - BAML_API_KEY=${BAML_API_KEY}
    volumes:
      # Mount only source code and configs for hot reload, exclude build artifacts
      - ./packages/backend/app:/app/packages/backend/app
      - ./packages/backend/api.py:/app/packages/backend/api.py
      - ./packages/backend/pyproject.toml:/app/packages/backend/pyproject.toml
      - ./packages/backend/scripts:/app/packages/backend/scripts
      - ./packages/backend/tests:/app/packages/backend/tests
      - backend_cache:/app/packages/backend/.uv
    networks:
      - harvest-hound-dev
    command:
      [
        "sh",
        "-c",
        "cd packages/backend && uv run uvicorn api:app --reload --host 0.0.0.0 --port 8000",
      ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: ./packages/frontend/Dockerfile.dev
    ports:
      - "3000:3000"
      - "6006:6006" # Storybook port
    environment:
      - VITE_API_URL=http://backend:8000
      - NODE_ENV=development
    volumes:
      # Mount only source code for hot reload, exclude node_modules
      - ./packages/frontend/src:/app/packages/frontend/src
      - ./packages/frontend/static:/app/packages/frontend/static
      - ./packages/frontend/package.json:/app/packages/frontend/package.json
      - ./packages/frontend/vite.config.ts:/app/packages/frontend/vite.config.ts
      - ./packages/frontend/tsconfig.json:/app/packages/frontend/tsconfig.json
      - ./packages/frontend/vitest.config.ts:/app/packages/frontend/vitest.config.ts
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - frontend_cache:/app/node_modules
    networks:
      - harvest-hound-dev
    depends_on:
      backend:
        condition: service_healthy
    command:
      [
        "pnpm",
        "--filter",
        "frontend",
        "dev",
        "--host",
        "0.0.0.0",
        "--port",
        "3000",
      ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  storybook:
    build:
      context: .
      dockerfile: ./packages/frontend/Dockerfile.dev
    ports:
      - "6006:6006"
    environment:
      - NODE_ENV=development
    volumes:
      # Mount only source code for hot reload, exclude node_modules  
      - ./packages/frontend/src:/app/packages/frontend/src
      - ./packages/frontend/static:/app/packages/frontend/static
      - ./packages/frontend/package.json:/app/packages/frontend/package.json
      - ./packages/frontend/.storybook:/app/packages/frontend/.storybook
      - ./packages/frontend/vite.config.ts:/app/packages/frontend/vite.config.ts
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - frontend_cache:/app/node_modules
    networks:
      - harvest-hound-dev
    command:
      [
        "pnpm",
        "--filter",
        "frontend",
        "storybook",
        "--host",
        "0.0.0.0",
        "--port",
        "6006",
      ]
    profiles:
      - storybook

networks:
  harvest-hound-dev:
    driver: bridge

volumes:
  backend_cache:
    driver: local
  frontend_cache:
    driver: local
