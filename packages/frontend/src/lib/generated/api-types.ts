/**
 * AUTO-GENERATED TypeScript types from backend Pydantic models.
 * DO NOT EDIT THIS FILE MANUALLY!
 *
 * To update types:
 * 1. Update Pydantic models in packages/backend/app/models/
 * 2. Run: cd packages/backend && uv run python scripts/export_schemas.py
 * 3. Run: cd packages/frontend && npm run generate-types
 */

/**
 * Clean domain model for ingredients.
 *
 * All state mutations return (updated_aggregate, events) tuples
 * for explicit event tracking without infrastructure concerns.
 */
export interface Ingredient {
	ingredient_id: string;
	name: string;
	default_unit: string;
	created_at: string;
}

export interface InventoryItem {
	store_id: string;
	ingredient_id: string;
	quantity: number;
	unit: string;
	notes?: string | null;
	added_at: string;
}

/**
 * Clean domain model for inventory stores.
 *
 * All state mutations return (updated_aggregate, events) tuples
 * for explicit event tracking without infrastructure concerns.
 */
export interface InventoryStore {
	store_id: string;
	name: string;
	description?: string;
	infinite_supply?: boolean;
	inventory_items?: {
		store_id: string;
		ingredient_id: string;
		quantity: number;
		unit: string;
		notes?: string | null;
		added_at: string;
	}[];
}

/**
 * Denormalized read model for inventory items with ingredient and store names.
 *
 * Optimized for UI consumption with flat structure and computed properties.
 */
export interface InventoryItemView {
	store_id: string;
	ingredient_id: string;
	ingredient_name: string;
	store_name: string;
	quantity: number;
	unit: string;
	notes?: string | null;
	added_at: string;
}

/**
 * Denormalized read model for inventory stores with computed fields.
 *
 * Includes computed item_count for efficient store listing views.
 */
export interface StoreView {
	store_id: string;
	name: string;
	description?: string;
	infinite_supply?: boolean;
	item_count?: number;
	created_at: string;
}

export interface IngredientCreated {
	ingredient_id: string;
	name: string;
	default_unit: string;
	created_at: string;
}

export interface StoreCreated {
	store_id: string;
	name: string;
	description: string;
	infinite_supply: boolean;
	created_at: string;
}

export interface InventoryItemAdded {
	store_id: string;
	ingredient_id: string;
	quantity: number;
	unit: string;
	notes?: string | null;
	added_at: string;
}
